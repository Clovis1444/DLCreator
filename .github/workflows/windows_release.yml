name: Windows Release

on:
    workflow_dispatch:

defaults:
  run:
    shell: cmd

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   6.7.2
  ARTIFACT:     qt-planets-build.zip

jobs:
  build:
    permissions: write-all
    runs-on:  windows-2019

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: 15
          platform: x64
    
      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@v4
    
      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.25.1'
    
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version:      ${{ env.QT_VERSION }}
          host:         windows
          target:       desktop
          arch:         win64_msvc2019_64
          dir:          ${{ runner.temp }}
          setup-python: false

      - name: Create build directory
        run:  mkdir ${{ env.SOURCE_DIR }}\build
    
      - name: Configure project
        run:  cmake --no-warn-unused-cli -DCMAKE_BUILD_TYPE:STRING=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_C_COMPILER:FILEPATH=clang -DCMAKE_CXX_COMPILER:FILEPATH=clang++ -S${{ env.SOURCE_DIR }} -B${{ env.SOURCE_DIR }}\build -G Ninja
    
      - name: Build project
        run: cmake --build ${{ env.SOURCE_DIR }}\build --config Debug --target all --
      
      - name: Deploy
        run: ${{ runner.temp }}\Qt\6.7.2\msvc2019_64\bin\windowsdeployqt ${{ env.SOURCE_DIR }}\build\DLCreator.exe

      - name: Zip
        run: 7z a -tzip -mx5 -r0 ${{ env.SOURCE_DIR }}\build\DLCreator-win.zip ${{ env.SOURCE_DIR }}\build
  
      - name: Create release
        uses: actions/create-release@v1
        id: new-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v0.1
          release_name: Test
          draft: true
          prerelease: true
  
      - name: Upload Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.new-release.outputs.upload_url }}
          asset_path: ${{ env.SOURCE_DIR }}\build\DLCreator-win.zip
          asset_name: DLCreator-win.zip
          asset_content_type: application/zip